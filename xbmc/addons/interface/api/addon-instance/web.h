/*
 *  Copyright (C) 2005-2022 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "addons/interface/IMsgHdl.h"

// API include
#include "addons/kodi-dev-kit/include/kodi/c-api/addon-instance/web.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

class IOffscreenRenderProcess;
struct directFuncToAddon_addoninstance_web_h;
struct directFuncToKodi_addoninstance_web_h;

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

class CHdl_kodi_addoninstance_web_h : public IMsgHdl
{
public:
  CHdl_kodi_addoninstance_web_h(CInterface& interface) : IMsgHdl(interface) {}

  void InitDirect(directFuncToKodi_addoninstance_web_h* ifcToKodi,
                  directFuncToAddon_addoninstance_web_h* ifcToAddon);

  // To handle callbacks from addon by shared sandbox API (static functions below in private becomes used)
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

  // Function calls from Kodi to addon

  enum WEB_ADDON_ERROR kodi_addon_web_start_instance_v1(
      const KODI_ADDON_WEB_HDL hdl); // Added with API 1

  void kodi_addon_web_stop_instance_v1(const KODI_ADDON_WEB_HDL hdl); // Added with API 1

  bool kodi_addon_web_main_initialize_v1(const KODI_ADDON_WEB_HDL hdl); // Added with API 1

  void kodi_addon_web_main_loop_v1(const KODI_ADDON_WEB_HDL hdl); // Added with API 1

  void kodi_addon_web_main_shutdown_v1(const KODI_ADDON_WEB_HDL hdl); // Added with API 1

  void kodi_addon_web_set_mute_v1(const KODI_ADDON_WEB_HDL hdl, bool mute); // Added with API 1

  bool kodi_addon_web_set_language_v1(const KODI_ADDON_WEB_HDL hdl,
                                      const char* language); // Added with API 1

  enum WEB_ADDON_ERROR kodi_addon_web_create_control_v1(
      const KODI_ADDON_WEB_HDL hdl,
      const struct WEB_ADDON_GUI_PROPS* props,
      const char* start_url,
      WEB_KODI_CONTROL* handle); // Added with API 1

  enum WEB_ADDON_ERROR kodi_addon_web_destroy_control_v1(const KODI_ADDON_WEB_HDL hdl,
                                                         const WEB_KODI_CONTROL handle,
                                                         bool complete); // Added with API 1

  bool kodi_addon_web_control_render_init_v1(IOffscreenRenderProcess* proc,
                                             const KODI_ADDON_WEB_HDL hdl,
                                             const WEB_KODI_CONTROL handle); // Added with API 1

  void kodi_addon_web_control_render_deinit_v1(IOffscreenRenderProcess* proc,
                                               const KODI_ADDON_WEB_HDL hdl,
                                               const WEB_KODI_CONTROL handle); // Added with API 1

  void kodi_addon_web_control_render_v1(IOffscreenRenderProcess* proc,
                                        const KODI_ADDON_WEB_HDL hdl,
                                        const WEB_KODI_CONTROL handle); // Added with API 1

  bool kodi_addon_web_control_dirty_v1(const KODI_ADDON_WEB_HDL hdl,
                                       const WEB_KODI_CONTROL handle); // Added with API 1

  bool kodi_addon_web_control_on_init_v1(const KODI_ADDON_WEB_HDL hdl,
                                         const WEB_KODI_CONTROL handle); // Added with API 1

  bool kodi_addon_web_control_on_action_v1(const KODI_ADDON_WEB_HDL hdl,
                                           const WEB_KODI_CONTROL handle,
                                           const struct KODI_ADDON_ACTION_DATA* action,
                                           int* nextItem); // Added with API 1

  bool kodi_addon_web_control_on_mouse_event_v1(const KODI_ADDON_WEB_HDL hdl,
                                                const WEB_KODI_CONTROL handle,
                                                int id,
                                                double x,
                                                double y,
                                                double offsetX,
                                                double offsetY,
                                                int state); // Added with API 1

  bool kodi_addon_web_control_open_website_v1(const KODI_ADDON_WEB_HDL hdl,
                                              const WEB_KODI_CONTROL handle,
                                              const char* url); // Added with API 1

  bool kodi_addon_web_control_get_history_v1(const KODI_ADDON_WEB_HDL hdl,
                                             const WEB_KODI_CONTROL handle,
                                             char*** list,
                                             size_t* entries,
                                             bool behind_current); // Added with API 1

  void kodi_addon_web_control_search_text_v1(const KODI_ADDON_WEB_HDL hdl,
                                             const WEB_KODI_CONTROL handle,
                                             const char* text,
                                             bool forward,
                                             bool matchCase,
                                             bool findNext); // Added with API 1

  void kodi_addon_web_control_stop_search_v1(const KODI_ADDON_WEB_HDL hdl,
                                             const WEB_KODI_CONTROL handle,
                                             bool clearSelection); // Added with API 1

  void kodi_addon_web_control_web_cmd_reload_v1(const KODI_ADDON_WEB_HDL hdl,
                                                const WEB_KODI_CONTROL handle); // Added with API 1

  void kodi_addon_web_control_web_cmd_stop_load_v1(
      const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle); // Added with API 1

  void kodi_addon_web_control_web_cmd_nav_back_v1(
      const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle); // Added with API 1

  void kodi_addon_web_control_web_cmd_nav_forward_v1(
      const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle); // Added with API 1

  void kodi_addon_web_control_web_open_own_context_menu_v1(
      const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle); // Added with API 1

  void kodi_addon_web_control_screen_size_change_v1(const KODI_ADDON_WEB_HDL hdl,
                                                    const WEB_KODI_CONTROL handle,
                                                    float x,
                                                    float y,
                                                    float width,
                                                    float height,
                                                    bool fullscreen); // Added with API 1

private:
  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4_END>---*/

  // Callbacks from addon to Kodi
  static void kodi_addon_web_inhibit_shutdown_v1(void* thisClassHdl,
                                                 KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                 bool inhibit); // Added with API 1

  static void kodi_addon_web_inhibit_screensaver_v1(void* thisClassHdl,
                                                    KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                    bool inhibit); // Added with API 1

  static bool kodi_addon_web_is_muted_v1(void* thisClassHdl,
                                         KODI_ADDON_INSTANCE_BACKEND_HDL hdl); // Added with API 1

  static void kodi_addon_web_control_set_control_ready_v1(void* thisClassHdl,
                                                          KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                          WEB_KODI_CONTROL handle,
                                                          bool ready); // Added with API 1

  static void kodi_addon_web_control_set_opened_address_v1(void* thisClassHdl,
                                                           KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                           WEB_KODI_CONTROL handle,
                                                           const char* title); // Added with API 1

  static void kodi_addon_web_control_set_opened_title_v1(void* thisClassHdl,
                                                         KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                         WEB_KODI_CONTROL handle,
                                                         const char* title); // Added with API 1

  static void kodi_addon_web_control_set_icon_url_v1(void* thisClassHdl,
                                                     KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                     WEB_KODI_CONTROL handle,
                                                     const char* icon); // Added with API 1

  static void kodi_addon_web_control_set_fullscreen_v1(void* thisClassHdl,
                                                       KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                       WEB_KODI_CONTROL handle,
                                                       bool fullscreen); // Added with API 1

  static void kodi_addon_web_control_set_loading_state_v1(void* thisClassHdl,
                                                          KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                          WEB_KODI_CONTROL handle,
                                                          bool isLoading,
                                                          bool canGoBack,
                                                          bool canGoForward); // Added with API 1

  static void kodi_addon_web_control_set_tooltip_v1(void* thisClassHdl,
                                                    KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                    WEB_KODI_CONTROL handle,
                                                    const char* tooltip); // Added with API 1

  static void kodi_addon_web_control_set_status_message_v1(void* thisClassHdl,
                                                           KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
                                                           WEB_KODI_CONTROL handle,
                                                           const char* status); // Added with API 1

  static void kodi_addon_web_control_request_open_site_in_new_tab_v1(
      void* thisClassHdl,
      KODI_ADDON_INSTANCE_BACKEND_HDL hdl,
      WEB_KODI_CONTROL handle,
      const char* url); // Added with API 1

  directFuncToAddon_addoninstance_web_h* m_ifcToAddon{nullptr};
};

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
