#pragma once
/*
 *      Copyright (C) 2017 Team KODI
 *      http://kodi.tv
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with KODI; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

/* Warning: Auto generated code, do not change by hand! */

#define PROCESS_HANDLE_EXCEPTION \
  catch (const std::out_of_range& oor) \
  { \
    fprintf(stderr, StringUtils::Format("Binary AddOn - %s: Thread out of Range error: %s\n", __FUNCTION__, oor.what()).c_str()); \
    std::cerr << __FUNCTION__ << " - Thread out of Range error: " << oor.what() << '\n'; \
    exit(1); \
  } \
  catch (uint32_t err) \
  { \
    kodi::Log(ADDON_LOG_ERROR, StringUtils::Format("Binary AddOn - %s: Addon received error after send of log entry to Kodi: %s", \
                    __FUNCTION__, errorTranslator[err].errorName).c_str()); \
  }

typedef enum AddonToKodiInterfaceCalls
{
  ADDONTOKODIFUNCTABLE_KODI__GET_ADDON_INFO = 0,
  ADDONTOKODIFUNCTABLE_KODI__OPEN_SETTINGS_DIALOG = 1,
  ADDONTOKODIFUNCTABLE_KODI__UNKNOWN_TO_UTF8 = 2,
  ADDONTOKODIFUNCTABLE_KODI__GET_LOCALIZED_STRING = 3,
  ADDONTOKODIFUNCTABLE_KODI__GET_LANGUAGE = 4,
  ADDONTOKODIFUNCTABLE_KODI__QUEUE_NOTIFICATION = 5,
  ADDONTOKODIFUNCTABLE_KODI__GET_MD5 = 6,
  ADDONTOKODIFUNCTABLE_KODI__GET_TEMP_PATH = 7,
  ADDONTOKODIFUNCTABLE_KODI__GET_REGION = 8,
  ADDONTOKODIFUNCTABLE_KODI__GET_FREE_MEM = 9,
  ADDONTOKODIFUNCTABLE_KODI__GET_GLOBAL_IDLE_TIME = 10,
  ADDONTOKODIFUNCTABLE_KODI__KODI_VERSION = 11,
  ADDONTOKODIFUNCTABLE_PVR__TRANSFEREPGENTRY = 10000,
  ADDONTOKODIFUNCTABLE_PVR__TRANSFERCHANNELENTRY = 10001,
  ADDONTOKODIFUNCTABLE_PVR__TRANSFERTIMERENTRY = 10002,
  ADDONTOKODIFUNCTABLE_PVR__TRANSFERRECORDINGENTRY = 10003,
  ADDONTOKODIFUNCTABLE_PVR__ADDMENUHOOK = 10004,
  ADDONTOKODIFUNCTABLE_PVR__RECORDING = 10005,
  ADDONTOKODIFUNCTABLE_PVR__TRIGGERCHANNELUPDATE = 10006,
  ADDONTOKODIFUNCTABLE_PVR__TRIGGERTIMERUPDATE = 10007,
  ADDONTOKODIFUNCTABLE_PVR__TRIGGERRECORDINGUPDATE = 10008,
  ADDONTOKODIFUNCTABLE_PVR__TRIGGERCHANNELGROUPSUPDATE = 10009,
  ADDONTOKODIFUNCTABLE_PVR__TRIGGEREPGUPDATE = 10010,
  ADDONTOKODIFUNCTABLE_PVR__TRANSFERCHANNELGROUP = 10011,
  ADDONTOKODIFUNCTABLE_PVR__TRANSFERCHANNELGROUPMEMBER = 10012,
  ADDONTOKODIFUNCTABLE_PVR__FREEDEMUXPACKET = 10013,
  ADDONTOKODIFUNCTABLE_PVR__ALLOCATEDEMUXPACKET = 10014,
  ADDONTOKODIFUNCTABLE_PVR__CONNECTIONSTATECHANGE = 10015,
  ADDONTOKODIFUNCTABLE_PVR__EPGEVENTSTATECHANGE = 10016,
  ADDONTOKODIFUNCTABLE_PVR__GETCODECBYNAME = 10017,
  ADDONTOKODIFUNCTABLE_ADDON__FREE_STRING = 30000,
  ADDONTOKODIFUNCTABLE_ADDON__GET_ADDON_PATH = 30001,
  ADDONTOKODIFUNCTABLE_ADDON__GET_BASE_USER_PATH = 30002,
  ADDONTOKODIFUNCTABLE_ADDON__ADDON_LOG_MSG = 30003,
  ADDONTOKODIFUNCTABLE_ADDON__GET_SETTING_BOOL = 30004,
  ADDONTOKODIFUNCTABLE_ADDON__GET_SETTING_INT = 30005,
  ADDONTOKODIFUNCTABLE_ADDON__GET_SETTING_FLOAT = 30006,
  ADDONTOKODIFUNCTABLE_ADDON__GET_SETTING_STRING = 30007,
  ADDONTOKODIFUNCTABLE_ADDON__SET_SETTING_BOOL = 30008,
  ADDONTOKODIFUNCTABLE_ADDON__SET_SETTING_INT = 30009,
  ADDONTOKODIFUNCTABLE_ADDON__SET_SETTING_FLOAT = 30010,
  ADDONTOKODIFUNCTABLE_ADDON__SET_SETTING_STRING = 30011,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__MAKE_STREAM = 90000,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__FREE_STREAM = 90001,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__GET_CURRENT_SINK_FORMAT = 90002,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_SPACE = 90003,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_ADD_DATA = 90004,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_DELAY = 90005,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_IS_BUFFERING = 90006,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_CACHE_TIME = 90007,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_CACHE_TOTAL = 90008,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_PAUSE = 90009,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_RESUME = 90010,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_DRAIN = 90011,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_IS_DRAINING = 90012,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_IS_DRAINED = 90013,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_FLUSH = 90014,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_VOLUME = 90015,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_SET_VOLUME = 90016,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_AMPLIFICATION = 90017,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_SET_AMPLIFICATION = 90018,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_FRAME_SIZE = 90019,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_CHANNEL_COUNT = 90020,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_SAMPLE_RATE = 90021,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_DATA_FORMAT = 90022,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_GET_RESAMPLE_RATIO = 90023,
  ADDONTOKODIFUNCTABLE_KODI_AUDIOENGINE__AESTREAM_SET_RESAMPLE_RATIO = 90024,
  ADDONTOKODIFUNCTABLE_KODI_NETWORK__WAKE_ON_LAN = 100000,
  ADDONTOKODIFUNCTABLE_KODI_NETWORK__GET_IP_ADDRESS = 100001,
  ADDONTOKODIFUNCTABLE_KODI_NETWORK__DNS_LOOKUP = 100002,
  ADDONTOKODIFUNCTABLE_KODI_NETWORK__URL_ENCODE = 100003,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__CAN_OPEN_DIRECTORY = 110000,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__CREATE_DIRECTORY = 110001,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__REMOVE_DIRECTORY = 110002,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__DIRECTORY_EXISTS = 110003,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__GET_DIRECTORY = 110004,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__FREE_DIRECTORY = 110005,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__FILE_EXISTS = 110006,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__STAT_FILE = 110007,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__DELETE_FILE = 110008,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__RENAME_FILE = 110009,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__COPY_FILE = 110010,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__GET_FILE_MD5 = 110011,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__GET_CACHE_THUMB_NAME = 110012,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__MAKE_LEGAL_FILENAME = 110013,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__MAKE_LEGAL_PATH = 110014,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__TRANSLATE_SPECIAL_PROTOCOL = 110015,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__OPEN_FILE = 110016,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__OPEN_FILE_FOR_WRITE = 110017,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__READ_FILE = 110018,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__READ_FILE_STRING = 110019,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__WRITE_FILE = 110020,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__FLUSH_FILE = 110021,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__SEEK_FILE = 110022,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__TRUNCATE_FILE = 110023,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__GET_FILE_POSITION = 110024,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__GET_FILE_LENGTH = 110025,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__GET_FILE_DOWNLOAD_SPEED = 110026,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__CLOSE_FILE = 110027,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__GET_FILE_CHUNK_SIZE = 110028,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__GET_PROPERTY = 110029,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__CURL_CREATE = 110030,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__CURL_ADD_OPTION = 110031,
  ADDONTOKODIFUNCTABLE_KODI_FILESYSTEM__CURL_OPEN = 110032,
  ADDONTOKODIFUNCTABLE_GAME__CLOSEGAME = 130000,
  ADDONTOKODIFUNCTABLE_GAME__OPENPIXELSTREAM = 130001,
  ADDONTOKODIFUNCTABLE_GAME__OPENVIDEOSTREAM = 130002,
  ADDONTOKODIFUNCTABLE_GAME__OPENPCMSTREAM = 130003,
  ADDONTOKODIFUNCTABLE_GAME__OPENAUDIOSTREAM = 130004,
  ADDONTOKODIFUNCTABLE_GAME__ADDSTREAMDATA = 130005,
  ADDONTOKODIFUNCTABLE_GAME__CLOSESTREAM = 130006,
  ADDONTOKODIFUNCTABLE_GAME__ENABLEHARDWARERENDERING = 130007,
  ADDONTOKODIFUNCTABLE_GAME__HWGETCURRENTFRAMEBUFFER = 130008,
  ADDONTOKODIFUNCTABLE_GAME__HWGETPROCADDRESS = 130009,
  ADDONTOKODIFUNCTABLE_GAME__RENDERFRAME = 130010,
  ADDONTOKODIFUNCTABLE_GAME__OPENPORT = 130011,
  ADDONTOKODIFUNCTABLE_GAME__CLOSEPORT = 130012,
  ADDONTOKODIFUNCTABLE_GAME__INPUTEVENT = 130013,
  ADDONTOKODIFUNCTABLE_VIDEOCODEC__GET_FRAME_BUFFER = 210000,
  ADDONTOKODIFUNCTABLE_VIDEOCODEC__RELEASE_FRAME_BUFFER = 210001,
  ADDONTOKODIFUNCTABLE_INPUTSTREAM__ALLOCATE_DEMUX_PACKET = 230000,
  ADDONTOKODIFUNCTABLE_INPUTSTREAM__ALLOCATE_ENCRYPTED_DEMUX_PACKET = 230001,
  ADDONTOKODIFUNCTABLE_INPUTSTREAM__FREE_DEMUX_PACKET = 230002,
  ADDONTOKODIFUNCTABLE_PERIPHERAL__TRIGGER_SCAN = 240000,
  ADDONTOKODIFUNCTABLE_PERIPHERAL__REFRESH_BUTTON_MAPS = 240001,
  ADDONTOKODIFUNCTABLE_PERIPHERAL__FEATURE_COUNT = 240002,
  ADDONTOKODIFUNCTABLE_PERIPHERAL__FEATURE_TYPE = 240003,
  ADDONTOKODIFUNCTABLE_AUDIODSP__ADD_MENU_HOOK = 280000,
  ADDONTOKODIFUNCTABLE_AUDIODSP__REMOVE_MENU_HOOK = 280001,
  ADDONTOKODIFUNCTABLE_AUDIODSP__REGISTER_MODE = 280002,
  ADDONTOKODIFUNCTABLE_AUDIODSP__UNREGISTER_MODE = 280003,
  ADDONTOKODIFUNCTABLE_AUDIOENCODER__WRITE = 290000,
  ADDONTOKODIFUNCTABLE_AUDIOENCODER__SEEK = 290001,
  ADDONTOKODIFUNCTABLE_KODI_GUI_GENERAL__LOCK = 340000,
  ADDONTOKODIFUNCTABLE_KODI_GUI_GENERAL__UNLOCK = 340001,
  ADDONTOKODIFUNCTABLE_KODI_GUI_GENERAL__GET_SCREEN_HEIGHT = 340002,
  ADDONTOKODIFUNCTABLE_KODI_GUI_GENERAL__GET_SCREEN_WIDTH = 340003,
  ADDONTOKODIFUNCTABLE_KODI_GUI_GENERAL__GET_VIDEO_RESOLUTION = 340004,
  ADDONTOKODIFUNCTABLE_KODI_GUI_GENERAL__GET_CURRENT_WINDOW_DIALOG_ID = 340005,
  ADDONTOKODIFUNCTABLE_KODI_GUI_GENERAL__GET_CURRENT_WINDOW_ID = 340006,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_BUTTON__SET_VISIBLE = 340207,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_BUTTON__SET_ENABLED = 340208,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_BUTTON__SET_LABEL = 340209,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_BUTTON__GET_LABEL = 340210,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_BUTTON__SET_LABEL2 = 340211,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_BUTTON__GET_LABEL2 = 340212,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__SET_VISIBLE = 340413,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__SET_ENABLED = 340414,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__SET_LABEL = 340415,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__GET_LABEL = 340416,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__SET_TEXT = 340417,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__GET_TEXT = 340418,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__SET_CURSOR_POSITION = 340419,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__GET_CURSOR_POSITION = 340420,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_EDIT__SET_INPUT_TYPE = 340421,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_FADE_LABEL__SET_VISIBLE = 340622,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_FADE_LABEL__ADD_LABEL = 340623,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_FADE_LABEL__GET_LABEL = 340624,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_FADE_LABEL__SET_SCROLLING = 340625,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_FADE_LABEL__RESET = 340626,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_IMAGE__SET_VISIBLE = 340827,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_IMAGE__SET_FILENAME = 340828,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_IMAGE__SET_COLOR_DIFFUSE = 340829,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_LABEL__SET_VISIBLE = 341030,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_LABEL__SET_LABEL = 341031,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_LABEL__GET_LABEL = 341032,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_PROGRESS__SET_VISIBLE = 341233,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_PROGRESS__SET_PERCENTAGE = 341234,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_PROGRESS__GET_PERCENTAGE = 341235,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_RADIO_BUTTON__SET_VISIBLE = 341436,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_RADIO_BUTTON__SET_ENABLED = 341437,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_RADIO_BUTTON__SET_LABEL = 341438,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_RADIO_BUTTON__GET_LABEL = 341439,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_RADIO_BUTTON__SET_SELECTED = 341440,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_RADIO_BUTTON__IS_SELECTED = 341441,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_RENDERING__SET_CALLBACKS = 341642,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_RENDERING__DESTROY = 341643,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_VISIBLE = 341844,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_ENABLED = 341845,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_TEXT = 341846,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__RESET = 341847,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_INT_RANGE = 341848,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_INT_VALUE = 341849,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__GET_INT_VALUE = 341850,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_INT_INTERVAL = 341851,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_PERCENTAGE = 341852,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__GET_PERCENTAGE = 341853,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_FLOAT_RANGE = 341854,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_FLOAT_VALUE = 341855,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__GET_FLOAT_VALUE = 341856,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SETTINGS_SLIDER__SET_FLOAT_INTERVAL = 341857,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_VISIBLE = 342058,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_ENABLED = 342059,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__RESET = 342060,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__GET_DESCRIPTION = 342061,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_INT_RANGE = 342062,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_INT_VALUE = 342063,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__GET_INT_VALUE = 342064,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_INT_INTERVAL = 342065,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_PERCENTAGE = 342066,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__GET_PERCENTAGE = 342067,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_FLOAT_RANGE = 342068,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_FLOAT_VALUE = 342069,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__GET_FLOAT_VALUE = 342070,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SLIDER__SET_FLOAT_INTERVAL = 342071,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_VISIBLE = 342272,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_ENABLED = 342273,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_TEXT = 342274,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__RESET = 342275,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_TYPE = 342276,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__ADD_STRING_LABEL = 342277,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_STRING_VALUE = 342278,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__GET_STRING_VALUE = 342279,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__ADD_INT_LABEL = 342280,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_INT_RANGE = 342281,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_INT_VALUE = 342282,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__GET_INT_VALUE = 342283,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_FLOAT_RANGE = 342284,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_FLOAT_VALUE = 342285,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__GET_FLOAT_VALUE = 342286,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_SPIN__SET_FLOAT_INTERVAL = 342287,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_TEXT_BOX__SET_VISIBLE = 342488,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_TEXT_BOX__RESET = 342489,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_TEXT_BOX__SET_TEXT = 342490,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_TEXT_BOX__GET_TEXT = 342491,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_TEXT_BOX__SCROLL = 342492,
  ADDONTOKODIFUNCTABLE_KODI_GUI_CONTROL_TEXT_BOX__SET_AUTO_SCROLLING = 342493,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGCONTEXTMENU__OPEN = 342694,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__NEW_DIALOG = 342895,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__DELETE_DIALOG = 342896,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__GET_TITLE = 342897,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__SET_TITLE = 342898,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__GET_TEXT = 342899,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__SET_TEXT = 342900,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__IS_FINISHED = 342901,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__MARK_FINISHED = 342902,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__GET_PERCENTAGE = 342903,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__SET_PERCENTAGE = 342904,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGEXTENDEDPROGRESS__SET_PROGRESS = 342905,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGFILEBROWSER__SHOW_AND_GET_DIRECTORY = 343106,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGFILEBROWSER__SHOW_AND_GET_FILE = 343107,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGFILEBROWSER__SHOW_AND_GET_FILE_FROM_DIR = 343108,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGFILEBROWSER__SHOW_AND_GET_FILE_LIST = 343109,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGFILEBROWSER__SHOW_AND_GET_SOURCE = 343110,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGFILEBROWSER__SHOW_AND_GET_IMAGE = 343111,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGFILEBROWSER__SHOW_AND_GET_IMAGE_LIST = 343112,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGFILEBROWSER__CLEAR_FILE_LIST = 343113,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SHOW_AND_GET_INPUT_WITH_HEAD = 343314,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SHOW_AND_GET_INPUT = 343315,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SHOW_AND_GET_NEW_PASSWORD_WITH_HEAD = 343316,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SHOW_AND_GET_NEW_PASSWORD = 343317,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SHOW_AND_VERIFY_NEW_PASSWORD_WITH_HEAD = 343318,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SHOW_AND_VERIFY_NEW_PASSWORD = 343319,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SHOW_AND_VERIFY_PASSWORD = 343320,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SHOW_AND_GET_FILTER = 343321,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__SEND_TEXT_TO_ACTIVE_KEYBOARD = 343322,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGKEYBOARD__IS_KEYBOARD_ACTIVATED = 343323,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGNUMERIC__SHOW_AND_VERIFY_NEW_PASSWORD = 343524,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGNUMERIC__SHOW_AND_VERIFY_PASSWORD = 343525,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGNUMERIC__SHOW_AND_VERIFY_INPUT = 343526,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGNUMERIC__SHOW_AND_GET_TIME = 343527,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGNUMERIC__SHOW_AND_GET_DATE = 343528,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGNUMERIC__SHOW_AND_GET_IP_ADDRESS = 343529,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGNUMERIC__SHOW_AND_GET_NUMBER = 343530,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGNUMERIC__SHOW_AND_GET_SECONDS = 343531,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGOK__SHOW_AND_GET_INPUT_SINGLE_TEXT = 343732,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGOK__SHOW_AND_GET_INPUT_LINE_TEXT = 343733,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__NEW_DIALOG = 343934,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__DELETE_DIALOG = 343935,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__OPEN = 343936,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__SET_HEADING = 343937,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__SET_LINE = 343938,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__SET_CAN_CANCEL = 343939,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__IS_CANCELED = 343940,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__SET_PERCENTAGE = 343941,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__GET_PERCENTAGE = 343942,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__SHOW_PROGRESS_BAR = 343943,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__SET_PROGRESS_MAX = 343944,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__SET_PROGRESS_ADVANCE = 343945,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGPROGRESS__ABORT = 343946,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGSELECT__OPEN = 344147,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGSELECT__OPEN_MULTI_SELECT = 344148,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGTEXTVIEWER__OPEN = 344349,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGYESNO__SHOW_AND_GET_INPUT_SINGLE_TEXT = 344550,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGYESNO__SHOW_AND_GET_INPUT_LINE_TEXT = 344551,
  ADDONTOKODIFUNCTABLE_KODI_GUI_DIALOGYESNO__SHOW_AND_GET_INPUT_LINE_BUTTON_TEXT = 344552,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__CREATE = 344753,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__DESTROY = 344754,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__GET_LABEL = 344755,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__SET_LABEL = 344756,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__GET_LABEL2 = 344757,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__SET_LABEL2 = 344758,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__GET_ICON_IMAGE = 344759,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__SET_ICON_IMAGE = 344760,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__GET_ART = 344761,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__SET_ART = 344762,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__GET_PATH = 344763,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__SET_PATH = 344764,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__GET_PROPERTY = 344765,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__SET_PROPERTY = 344766,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__SELECT = 344767,
  ADDONTOKODIFUNCTABLE_KODI_GUI_LISTITEM__IS_SELECTED = 344768,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__CREATE = 344969,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__DESTROY = 344970,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_CALLBACKS = 344971,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__CLOSE = 344972,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__DO_MODAL = 344973,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_FOCUS_ID = 344974,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_FOCUS_ID = 344975,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_CONTROL_LABEL = 344976,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_PROPERTY = 344977,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_PROPERTY_INT = 344978,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_PROPERTY_BOOL = 344979,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_PROPERTY_DOUBLE = 344980,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_PROPERTY = 344981,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_PROPERTY_INT = 344982,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_PROPERTY_BOOL = 344983,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_PROPERTY_DOUBLE = 344984,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__CLEAR_PROPERTIES = 344985,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__CLEAR_PROPERTY = 344986,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__CLEAR_ITEM_LIST = 344987,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__ADD_LIST_ITEM = 344988,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__REMOVE_LIST_ITEM_FROM_POSITION = 344989,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__REMOVE_LIST_ITEM = 344990,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_LIST_ITEM = 344991,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_CURRENT_LIST_POSITION = 344992,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CURRENT_LIST_POSITION = 344993,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_LIST_SIZE = 344994,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_CONTAINER_PROPERTY = 344995,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__SET_CONTAINER_CONTENT = 344996,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CURRENT_CONTAINER_ID = 344997,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__MARK_DIRTY_REGION = 344998,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_BUTTON = 344999,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_EDIT = 345000,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_FADE_LABEL = 345001,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_IMAGE = 345002,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_LABEL = 345003,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_PROGRESS = 345004,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_RADIO_BUTTON = 345005,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_RENDER_ADDON = 345006,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_SETTINGS_SLIDER = 345007,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_SLIDER = 345008,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_SPIN = 345009,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_TEXT_BOX = 345010,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY1 = 345011,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY2 = 345012,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY3 = 345013,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY4 = 345014,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY5 = 345015,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY6 = 345016,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY7 = 345017,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY8 = 345018,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY9 = 345019,
  ADDONTOKODIFUNCTABLE_KODI_GUI_WINDOW__GET_CONTROL_DUMMY10 = 345020,
}AddonToKodiInterfaceCalls;


/* Interface: AddonToKodiFuncTable_kodi */
extern char* AddonToKodiFuncTable_kodi__get_addon_info(void* kodiBase, const char* id);
extern bool AddonToKodiFuncTable_kodi__open_settings_dialog(void* kodiBase);
extern char* AddonToKodiFuncTable_kodi__unknown_to_utf8(void* kodiBase, const char* source, bool* ret, bool failOnBadChar);
extern char* AddonToKodiFuncTable_kodi__get_localized_string(void* kodiBase, long dwCode);
extern char* AddonToKodiFuncTable_kodi__get_language(void* kodiBase, int format, bool region);
extern bool AddonToKodiFuncTable_kodi__queue_notification(void* kodiBase, int type, const char* header, const char* message, const char* imageFile, unsigned int displayTime, bool withSound, unsigned int messageTime);
extern void AddonToKodiFuncTable_kodi__get_md5(void* kodiBase, const char* text, char* md5);
extern char* AddonToKodiFuncTable_kodi__get_temp_path(void* kodiBase);
extern char* AddonToKodiFuncTable_kodi__get_region(void* kodiBase, const char* id);
extern void AddonToKodiFuncTable_kodi__get_free_mem(void* kodiBase, long* free, long* total, bool as_bytes);
extern int AddonToKodiFuncTable_kodi__get_global_idle_time(void* kodiBase);
extern void AddonToKodiFuncTable_kodi__kodi_version(void* kodiBase, char** compile_name, int* major, int* minor, char** revision, char** tag, char** tagversion);

/* Interface: AddonToKodiFuncTable_PVR */
extern void AddonToKodiFuncTable_PVR__TransferEpgEntry(void* kodiInstance, const ADDON_HANDLE handle, const EPG_TAG *epgentry);
extern void AddonToKodiFuncTable_PVR__TransferChannelEntry(void* kodiInstance, const ADDON_HANDLE handle, const PVR_CHANNEL *chan);
extern void AddonToKodiFuncTable_PVR__TransferTimerEntry(void* kodiInstance, const ADDON_HANDLE handle, const PVR_TIMER *timer);
extern void AddonToKodiFuncTable_PVR__TransferRecordingEntry(void* kodiInstance, const ADDON_HANDLE handle, const PVR_RECORDING *recording);
extern void AddonToKodiFuncTable_PVR__AddMenuHook(void* kodiInstance, PVR_MENUHOOK *hook);
extern void AddonToKodiFuncTable_PVR__Recording(void* kodiInstance, const char *Name, const char *FileName, bool On);
extern void AddonToKodiFuncTable_PVR__TriggerChannelUpdate(void* kodiInstance);
extern void AddonToKodiFuncTable_PVR__TriggerTimerUpdate(void* kodiInstance);
extern void AddonToKodiFuncTable_PVR__TriggerRecordingUpdate(void* kodiInstance);
extern void AddonToKodiFuncTable_PVR__TriggerChannelGroupsUpdate(void* kodiInstance);
extern void AddonToKodiFuncTable_PVR__TriggerEpgUpdate(void* kodiInstance, unsigned int iChannelUid);
extern void AddonToKodiFuncTable_PVR__TransferChannelGroup(void* kodiInstance, const ADDON_HANDLE handle, const PVR_CHANNEL_GROUP *group);
extern void AddonToKodiFuncTable_PVR__TransferChannelGroupMember(void* kodiInstance, const ADDON_HANDLE handle, const PVR_CHANNEL_GROUP_MEMBER *member);
extern void AddonToKodiFuncTable_PVR__FreeDemuxPacket(void* kodiInstance, DemuxPacket* pPacket);
extern DemuxPacket* AddonToKodiFuncTable_PVR__AllocateDemuxPacket(void* kodiInstance, int iDataSize);
extern void AddonToKodiFuncTable_PVR__ConnectionStateChange(void* kodiInstance, const char* strConnectionString, PVR_CONNECTION_STATE newState, const char *strMessage);
extern void AddonToKodiFuncTable_PVR__EpgEventStateChange(void* kodiInstance, EPG_TAG* tag, EPG_EVENT_STATE newState);
extern xbmc_codec_t AddonToKodiFuncTable_PVR__GetCodecByName(const void* kodiInstance, const char* strCodecName);

/* Interface: AddonToKodiFuncTable_Addon */
extern void AddonToKodiFuncTable_Addon__free_string(void* kodiBase, char* str);
extern char* AddonToKodiFuncTable_Addon__get_addon_path(void* kodiBase);
extern char* AddonToKodiFuncTable_Addon__get_base_user_path(void* kodiBase);
extern void AddonToKodiFuncTable_Addon__addon_log_msg(void* kodiBase, const int loglevel, const char *msg);
extern bool AddonToKodiFuncTable_Addon__get_setting_bool(void* kodiBase, const char* id, bool* value);
extern bool AddonToKodiFuncTable_Addon__get_setting_int(void* kodiBase, const char* id, int* value);
extern bool AddonToKodiFuncTable_Addon__get_setting_float(void* kodiBase, const char* id, float* value);
extern bool AddonToKodiFuncTable_Addon__get_setting_string(void* kodiBase, const char* id, char** value);
extern bool AddonToKodiFuncTable_Addon__set_setting_bool(void* kodiBase, const char* id, bool value);
extern bool AddonToKodiFuncTable_Addon__set_setting_int(void* kodiBase, const char* id, int value);
extern bool AddonToKodiFuncTable_Addon__set_setting_float(void* kodiBase, const char* id, float value);
extern bool AddonToKodiFuncTable_Addon__set_setting_string(void* kodiBase, const char* id, const char* value);

/* Interface: AddonToKodiFuncTable_kodi_audioengine */
extern AEStreamHandle* AddonToKodiFuncTable_kodi_audioengine__make_stream(void *kodiBase, AudioEngineFormat* format, unsigned int options);
extern void AddonToKodiFuncTable_kodi_audioengine__free_stream(void *kodiBase, AEStreamHandle *stream);
extern bool AddonToKodiFuncTable_kodi_audioengine__get_current_sink_format(void *kodiBase, AudioEngineFormat* sink_format);
extern unsigned int AddonToKodiFuncTable_kodi_audioengine__aestream_get_space(void *kodiBase, AEStreamHandle *handle);
extern unsigned int AddonToKodiFuncTable_kodi_audioengine__aestream_add_data(void *kodiBase, AEStreamHandle *handle, uint8_t* const *data, unsigned int offset, unsigned int frames, double pts);
extern double AddonToKodiFuncTable_kodi_audioengine__aestream_get_delay(void *kodiBase, AEStreamHandle *handle);
extern bool AddonToKodiFuncTable_kodi_audioengine__aestream_is_buffering(void *kodiBase, AEStreamHandle *handle);
extern double AddonToKodiFuncTable_kodi_audioengine__aestream_get_cache_time(void *kodiBase, AEStreamHandle *handle);
extern double AddonToKodiFuncTable_kodi_audioengine__aestream_get_cache_total(void *kodiBase, AEStreamHandle *handle);
extern void AddonToKodiFuncTable_kodi_audioengine__aestream_pause(void *kodiBase, AEStreamHandle *handle);
extern void AddonToKodiFuncTable_kodi_audioengine__aestream_resume(void *kodiBase, AEStreamHandle *handle);
extern void AddonToKodiFuncTable_kodi_audioengine__aestream_drain(void *kodiBase, AEStreamHandle *handle, bool wait);
extern bool AddonToKodiFuncTable_kodi_audioengine__aestream_is_draining(void *kodiBase, AEStreamHandle *handle);
extern bool AddonToKodiFuncTable_kodi_audioengine__aestream_is_drained(void *kodiBase, AEStreamHandle *handle);
extern void AddonToKodiFuncTable_kodi_audioengine__aestream_flush(void *kodiBase, AEStreamHandle *handle);
extern float AddonToKodiFuncTable_kodi_audioengine__aestream_get_volume(void *kodiBase, AEStreamHandle *handle);
extern void AddonToKodiFuncTable_kodi_audioengine__aestream_set_volume(void *kodiBase, AEStreamHandle *handle, float volume);
extern float AddonToKodiFuncTable_kodi_audioengine__aestream_get_amplification(void *kodiBase, AEStreamHandle *handle);
extern void AddonToKodiFuncTable_kodi_audioengine__aestream_set_amplification(void *kodiBase, AEStreamHandle *handle, float amplify);
extern unsigned int AddonToKodiFuncTable_kodi_audioengine__aestream_get_frame_size(void *kodiBase, AEStreamHandle *handle);
extern unsigned int AddonToKodiFuncTable_kodi_audioengine__aestream_get_channel_count(void *kodiBase, AEStreamHandle *handle);
extern unsigned int AddonToKodiFuncTable_kodi_audioengine__aestream_get_sample_rate(void *kodiBase, AEStreamHandle *handle);
extern AEDataFormat AddonToKodiFuncTable_kodi_audioengine__aestream_get_data_format(void *kodiBase, AEStreamHandle *handle);
extern double AddonToKodiFuncTable_kodi_audioengine__aestream_get_resample_ratio(void *kodiBase, AEStreamHandle *handle);
extern void AddonToKodiFuncTable_kodi_audioengine__aestream_set_resample_ratio(void *kodiBase, AEStreamHandle *handle, double ratio);

/* Interface: AddonToKodiFuncTable_kodi_network */
extern bool AddonToKodiFuncTable_kodi_network__wake_on_lan(void* kodiBase, const char *mac);
extern char* AddonToKodiFuncTable_kodi_network__get_ip_address(void* kodiBase);
extern char* AddonToKodiFuncTable_kodi_network__dns_lookup(void* kodiBase, const char* url, bool* ret);
extern char* AddonToKodiFuncTable_kodi_network__url_encode(void* kodiBase, const char* url);

/* Interface: AddonToKodiFuncTable_kodi_filesystem */
extern bool AddonToKodiFuncTable_kodi_filesystem__can_open_directory(void* kodiBase, const char* url);
extern bool AddonToKodiFuncTable_kodi_filesystem__create_directory(void* kodiBase, const char* path);
extern bool AddonToKodiFuncTable_kodi_filesystem__remove_directory(void* kodiBase, const char* path);
extern bool AddonToKodiFuncTable_kodi_filesystem__directory_exists(void* kodiBase, const char* path);
extern bool AddonToKodiFuncTable_kodi_filesystem__get_directory(void* kodiBase, const char* path, const char* mask, VFSDirEntry** items, unsigned int* num_items);
extern void AddonToKodiFuncTable_kodi_filesystem__free_directory(void* kodiBase, VFSDirEntry* items, unsigned int num_items);
extern bool AddonToKodiFuncTable_kodi_filesystem__file_exists(void* kodiBase, const char *filename, bool useCache);
extern int AddonToKodiFuncTable_kodi_filesystem__stat_file(void* kodiBase, const char *filename, struct __stat64* buffer);
extern bool AddonToKodiFuncTable_kodi_filesystem__delete_file(void* kodiBase, const char *filename);
extern bool AddonToKodiFuncTable_kodi_filesystem__rename_file(void* kodiBase, const char *filename, const char *newFileName);
extern bool AddonToKodiFuncTable_kodi_filesystem__copy_file(void* kodiBase, const char *filename, const char *dest);
extern char* AddonToKodiFuncTable_kodi_filesystem__get_file_md5(void* kodiBase, const char* filename);
extern char* AddonToKodiFuncTable_kodi_filesystem__get_cache_thumb_name(void* kodiBase, const char* filename);
extern char* AddonToKodiFuncTable_kodi_filesystem__make_legal_filename(void* kodiBase, const char* filename);
extern char* AddonToKodiFuncTable_kodi_filesystem__make_legal_path(void* kodiBase, const char* path);
extern char* AddonToKodiFuncTable_kodi_filesystem__translate_special_protocol(void* kodiBase, const char *strSource);
extern void* AddonToKodiFuncTable_kodi_filesystem__open_file(void* kodiBase, const char* filename, unsigned int flags);
extern void* AddonToKodiFuncTable_kodi_filesystem__open_file_for_write(void* kodiBase, const char* filename, bool overwrite);
extern ssize_t AddonToKodiFuncTable_kodi_filesystem__read_file(void* kodiBase, void* file, void* ptr, size_t size);
extern bool AddonToKodiFuncTable_kodi_filesystem__read_file_string(void* kodiBase, void* file, char *szLine, int iLineLength);
extern ssize_t AddonToKodiFuncTable_kodi_filesystem__write_file(void* kodiBase, void* file, const void* ptr, size_t size);
extern void AddonToKodiFuncTable_kodi_filesystem__flush_file(void* kodiBase, void* file);
extern int64_t AddonToKodiFuncTable_kodi_filesystem__seek_file(void* kodiBase, void* file, int64_t position, int whence);
extern int AddonToKodiFuncTable_kodi_filesystem__truncate_file(void* kodiBase, void* file, int64_t size);
extern int64_t AddonToKodiFuncTable_kodi_filesystem__get_file_position(void* kodiBase, void* file);
extern int64_t AddonToKodiFuncTable_kodi_filesystem__get_file_length(void* kodiBase, void* file);
extern double AddonToKodiFuncTable_kodi_filesystem__get_file_download_speed(void* kodiBase, void* file);
extern void AddonToKodiFuncTable_kodi_filesystem__close_file(void* kodiBase, void* file);
extern int AddonToKodiFuncTable_kodi_filesystem__get_file_chunk_size(void* kodiBase, void* file);
extern char* AddonToKodiFuncTable_kodi_filesystem__get_property(void* kodiBase, void* file, int type, const char *name);
extern void* AddonToKodiFuncTable_kodi_filesystem__curl_create(void* kodiBase, const char* url);
extern bool AddonToKodiFuncTable_kodi_filesystem__curl_add_option(void* kodiBase, void* file, int type, const char* name, const char* value);
extern bool AddonToKodiFuncTable_kodi_filesystem__curl_open(void* kodiBase, void* file, unsigned int flags);

/* Interface: AddonToKodiFuncTable_Game */
extern void AddonToKodiFuncTable_Game__CloseGame(void* kodiInstance);
extern int AddonToKodiFuncTable_Game__OpenPixelStream(void* kodiInstance, GAME_PIXEL_FORMAT format, unsigned int width, unsigned int height, GAME_VIDEO_ROTATION rotation);
extern int AddonToKodiFuncTable_Game__OpenVideoStream(void* kodiInstance, GAME_VIDEO_CODEC codec);
extern int AddonToKodiFuncTable_Game__OpenPCMStream(void* kodiInstance, GAME_PCM_FORMAT format, const GAME_AUDIO_CHANNEL* channel_map);
extern int AddonToKodiFuncTable_Game__OpenAudioStream(void* kodiInstance, GAME_AUDIO_CODEC codec, const GAME_AUDIO_CHANNEL* channel_map);
extern void AddonToKodiFuncTable_Game__AddStreamData(void* kodiInstance, GAME_STREAM_TYPE stream, const uint8_t* data, unsigned int size);
extern void AddonToKodiFuncTable_Game__CloseStream(void* kodiInstance, GAME_STREAM_TYPE stream);
extern void AddonToKodiFuncTable_Game__EnableHardwareRendering(void* kodiInstance, const game_hw_info* hw_info);
extern uintptr_t AddonToKodiFuncTable_Game__HwGetCurrentFramebuffer(void* kodiInstance);
extern game_proc_address_t AddonToKodiFuncTable_Game__HwGetProcAddress(void* kodiInstance, const char* symbol);
extern void AddonToKodiFuncTable_Game__RenderFrame(void* kodiInstance);
extern bool AddonToKodiFuncTable_Game__OpenPort(void* kodiInstance, unsigned int port);
extern void AddonToKodiFuncTable_Game__ClosePort(void* kodiInstance, unsigned int port);
extern bool AddonToKodiFuncTable_Game__InputEvent(void* kodiInstance, const game_input_event* event);

/* Interface: AddonToKodiFuncTable_VFSEntry */

/* Interface: AddonToKodiFuncTable_VideoCodec */
extern bool AddonToKodiFuncTable_VideoCodec__get_frame_buffer(void* kodiInstance, VIDEOCODEC_PICTURE *picture);
extern void AddonToKodiFuncTable_VideoCodec__release_frame_buffer(void* kodiInstance, void *buffer);

/* Interface: AddonToKodiFuncTable_Visualization */

/* Interface: AddonToKodiFuncTable_InputStream */
extern DemuxPacket* AddonToKodiFuncTable_InputStream__allocate_demux_packet(void* kodiInstance, int data_size);
extern DemuxPacket* AddonToKodiFuncTable_InputStream__allocate_encrypted_demux_packet(void* kodiInstance, unsigned int data_size, unsigned int encrypted_subsample_count);
extern void AddonToKodiFuncTable_InputStream__free_demux_packet(void* kodiInstance, DemuxPacket* packet);

/* Interface: AddonToKodiFuncTable_Peripheral */
extern void AddonToKodiFuncTable_Peripheral__trigger_scan(void* kodiInstance);
extern void AddonToKodiFuncTable_Peripheral__refresh_button_maps(void* kodiInstance, const char* device_name, const char* controller_id);
extern unsigned int AddonToKodiFuncTable_Peripheral__feature_count(void* kodiInstance, const char* controller_id, JOYSTICK_FEATURE_TYPE type);
extern JOYSTICK_FEATURE_TYPE AddonToKodiFuncTable_Peripheral__feature_type(void* kodiInstance, const char* controller_id, const char* feature_name);

/* Interface: AddonToKodiFuncTable_VFSEntry */

/* Interface: AddonToKodiFuncTable_Screensaver */

/* Interface: AddonToKodiFuncTable_AudioDSP */
extern void AddonToKodiFuncTable_AudioDSP__add_menu_hook(void* kodiInstance, AE_DSP_MENUHOOK *hook);
extern void AddonToKodiFuncTable_AudioDSP__remove_menu_hook(void* kodiInstance, AE_DSP_MENUHOOK *hook);
extern void AddonToKodiFuncTable_AudioDSP__register_mode(void* kodiInstance, AE_DSP_MODES::AE_DSP_MODE *mode);
extern void AddonToKodiFuncTable_AudioDSP__unregister_mode(void* kodiInstance, AE_DSP_MODES::AE_DSP_MODE *mode);

/* Interface: AddonToKodiFuncTable_AudioEncoder */
extern int AddonToKodiFuncTable_AudioEncoder__write(void* kodiInstance, const uint8_t* data, int len);
extern int64_t AddonToKodiFuncTable_AudioEncoder__seek(void* kodiInstance, int64_t pos, int whence);

/* Interface: AddonToKodiFuncTable_AudioDecoder */

/* Interface: AddonToKodiFuncTable_ImageDecoder */

/* Interface: AddonToKodiFuncTable_kodi_gui_general */
extern void AddonToKodiFuncTable_kodi_gui_general__lock();
extern void AddonToKodiFuncTable_kodi_gui_general__unlock();
extern int AddonToKodiFuncTable_kodi_gui_general__get_screen_height(void* kodiBase);
extern int AddonToKodiFuncTable_kodi_gui_general__get_screen_width(void* kodiBase);
extern int AddonToKodiFuncTable_kodi_gui_general__get_video_resolution(void* kodiBase);
extern int AddonToKodiFuncTable_kodi_gui_general__get_current_window_dialog_id(void* kodiBase);
extern int AddonToKodiFuncTable_kodi_gui_general__get_current_window_id(void* kodiBase);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_button */
extern void AddonToKodiFuncTable_kodi_gui_control_button__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_button__set_enabled(void* kodiBase, void* handle, bool enabled);
extern void AddonToKodiFuncTable_kodi_gui_control_button__set_label(void* kodiBase, void* handle, const char* label);
extern char* AddonToKodiFuncTable_kodi_gui_control_button__get_label(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_button__set_label2(void* kodiBase, void* handle, const char *label);
extern char* AddonToKodiFuncTable_kodi_gui_control_button__get_label2(void* kodiBase, void* handle);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_edit */
extern void AddonToKodiFuncTable_kodi_gui_control_edit__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_edit__set_enabled(void* kodiBase, void* handle, bool enabled);
extern void AddonToKodiFuncTable_kodi_gui_control_edit__set_label(void* kodiBase, void* handle, const char* label);
extern char* AddonToKodiFuncTable_kodi_gui_control_edit__get_label(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_edit__set_text(void* kodiBase, void* handle, const char* text);
extern char* AddonToKodiFuncTable_kodi_gui_control_edit__get_text(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_edit__set_cursor_position(void* kodiBase, void* handle, unsigned int position);
extern unsigned int AddonToKodiFuncTable_kodi_gui_control_edit__get_cursor_position(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_edit__set_input_type(void* kodiBase, void* handle, int type, const char* heading);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_fade_label */
extern void AddonToKodiFuncTable_kodi_gui_control_fade_label__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_fade_label__add_label(void* kodiBase, void* handle, const char* text);
extern char* AddonToKodiFuncTable_kodi_gui_control_fade_label__get_label(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_fade_label__set_scrolling(void* kodiBase, void* handle, bool scroll);
extern void AddonToKodiFuncTable_kodi_gui_control_fade_label__reset(void* kodiBase, void* handle);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_image */
extern void AddonToKodiFuncTable_kodi_gui_control_image__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_image__set_filename(void* kodiBase, void* handle, const char* filename, bool use_cache);
extern void AddonToKodiFuncTable_kodi_gui_control_image__set_color_diffuse(void* kodiBase, void* handle, uint32_t color_diffuse);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_label */
extern void AddonToKodiFuncTable_kodi_gui_control_label__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_label__set_label(void* kodiBase, void* handle, const char* text);
extern char* AddonToKodiFuncTable_kodi_gui_control_label__get_label(void* kodiBase, void* handle);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_progress */
extern void AddonToKodiFuncTable_kodi_gui_control_progress__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_progress__set_percentage(void* kodiBase, void* handle, float percent);
extern float AddonToKodiFuncTable_kodi_gui_control_progress__get_percentage(void* kodiBase, void* handle);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_radio_button */
extern void AddonToKodiFuncTable_kodi_gui_control_radio_button__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_radio_button__set_enabled(void* kodiBase, void* handle, bool enabled);
extern void AddonToKodiFuncTable_kodi_gui_control_radio_button__set_label(void* kodiBase, void* handle, const char* text);
extern char* AddonToKodiFuncTable_kodi_gui_control_radio_button__get_label(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_radio_button__set_selected(void* kodiBase, void* handle, bool selected);
extern bool AddonToKodiFuncTable_kodi_gui_control_radio_button__is_selected(void* kodiBase, void* handle);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_rendering */
extern void AddonToKodiFuncTable_kodi_gui_control_rendering__set_callbacks(void* kodiBase, void* handle, void* clienthandle, bool (*createCB)(void*,int,int,int,int,void*), void (*renderCB)(void*), void (*stopCB)(void*), bool (*dirtyCB)(void*));
extern void AddonToKodiFuncTable_kodi_gui_control_rendering__destroy(void *kodiBase, void* handle);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_settings_slider */
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_enabled(void* kodiBase, void* handle, bool enabled);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_text(void* kodiBase, void* handle, const char* label);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__reset(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_int_range(void* kodiBase, void* handle, int start, int end);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_int_value(void* kodiBase, void* handle, int value);
extern int AddonToKodiFuncTable_kodi_gui_control_settings_slider__get_int_value(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_int_interval(void* kodiBase, void* handle, int interval);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_percentage(void* kodiBase, void* handle, float percent);
extern float AddonToKodiFuncTable_kodi_gui_control_settings_slider__get_percentage(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_float_range(void* kodiBase, void* handle, float start, float end);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_float_value(void* kodiBase, void* handle, float value);
extern float AddonToKodiFuncTable_kodi_gui_control_settings_slider__get_float_value(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_settings_slider__set_float_interval(void* kodiBase, void* handle, float interval);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_slider */
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_enabled(void* kodiBase, void* handle, bool enabled);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__reset(void* kodiBase, void* handle);
extern char* AddonToKodiFuncTable_kodi_gui_control_slider__get_description(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_int_range(void* kodiBase, void* handle, int start, int end);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_int_value(void* kodiBase, void* handle, int value);
extern int AddonToKodiFuncTable_kodi_gui_control_slider__get_int_value(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_int_interval(void* kodiBase, void* handle, int interval);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_percentage(void* kodiBase, void* handle, float percent);
extern float AddonToKodiFuncTable_kodi_gui_control_slider__get_percentage(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_float_range(void* kodiBase, void* handle, float start, float end);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_float_value(void* kodiBase, void* handle, float value);
extern float AddonToKodiFuncTable_kodi_gui_control_slider__get_float_value(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_slider__set_float_interval(void* kodiBase, void* handle, float interval);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_spin */
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_enabled(void* kodiBase, void* handle, bool enabled);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_text(void* kodiBase, void* handle, const char* text);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__reset(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_type(void* kodiBase, void* handle, int type);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__add_string_label(void* kodiBase, void* handle, const char* label, const char* value);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_string_value(void* kodiBase, void* handle, const char* value);
extern char* AddonToKodiFuncTable_kodi_gui_control_spin__get_string_value(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__add_int_label(void* kodiBase, void* handle, const char* label, int value);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_int_range(void* kodiBase, void* handle, int start, int end);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_int_value(void* kodiBase, void* handle, int value);
extern int AddonToKodiFuncTable_kodi_gui_control_spin__get_int_value(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_float_range(void* kodiBase, void* handle, float start, float end);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_float_value(void* kodiBase, void* handle, float value);
extern float AddonToKodiFuncTable_kodi_gui_control_spin__get_float_value(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_spin__set_float_interval(void* kodiBase, void* handle, float interval);

/* Interface: AddonToKodiFuncTable_kodi_gui_control_text_box */
extern void AddonToKodiFuncTable_kodi_gui_control_text_box__set_visible(void* kodiBase, void* handle, bool visible);
extern void AddonToKodiFuncTable_kodi_gui_control_text_box__reset(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_text_box__set_text(void* kodiBase, void* handle, const char* text);
extern char* AddonToKodiFuncTable_kodi_gui_control_text_box__get_text(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_control_text_box__scroll(void* kodiBase, void* handle, unsigned int scroll);
extern void AddonToKodiFuncTable_kodi_gui_control_text_box__set_auto_scrolling(void* kodiBase, void* handle, int delay, int time, int repeat);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogContextMenu */
extern int AddonToKodiFuncTable_kodi_gui_dialogContextMenu__open(void* kodiBase, const char *heading, const char *entries[], unsigned int size);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress */
extern void* AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__new_dialog(void* kodiBase, const char *title);
extern void AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__delete_dialog(void* kodiBase, void* handle);
extern char* AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__get_title(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__set_title(void* kodiBase, void* handle, const char *title);
extern char* AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__get_text(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__set_text(void* kodiBase, void* handle, const char *text);
extern bool AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__is_finished(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__mark_finished(void* kodiBase, void* handle);
extern float AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__get_percentage(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__set_percentage(void* kodiBase, void* handle, float percentage);
extern void AddonToKodiFuncTable_kodi_gui_dialogExtendedProgress__set_progress(void* kodiBase, void* handle, int currentItem, int itemCount);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogFileBrowser */
extern bool AddonToKodiFuncTable_kodi_gui_dialogFileBrowser__show_and_get_directory(void* kodiBase, const char* shares, const char* heading, const char* path_in, char** path_out, bool writeOnly);
extern bool AddonToKodiFuncTable_kodi_gui_dialogFileBrowser__show_and_get_file(void* kodiBase, const char* shares, const char* mask, const char* heading, const char* path_in, char** path_out, bool use_thumbs, bool use_file_directories);
extern bool AddonToKodiFuncTable_kodi_gui_dialogFileBrowser__show_and_get_file_from_dir(void* kodiBase, const char* directory, const char* mask, const char* heading, const char* path_in, char** path_out, bool use_thumbs, bool use_file_directories, bool singleList);
extern bool AddonToKodiFuncTable_kodi_gui_dialogFileBrowser__show_and_get_file_list(void* kodiBase, const char* shares, const char* mask, const char* heading, char*** file_list, unsigned int* entries, bool use_thumbs, bool use_file_directories);
extern bool AddonToKodiFuncTable_kodi_gui_dialogFileBrowser__show_and_get_source(void* kodiBase, const char* path_in, char** path_out, bool allow_network_shares, const char* additional_share, const char* type);
extern bool AddonToKodiFuncTable_kodi_gui_dialogFileBrowser__show_and_get_image(void* kodiBase, const char* shares, const char* heading, const char* path_in, char** path_out);
extern bool AddonToKodiFuncTable_kodi_gui_dialogFileBrowser__show_and_get_image_list(void* kodiBase, const char* shares, const char* heading, char*** file_list, unsigned int* entries);
extern void AddonToKodiFuncTable_kodi_gui_dialogFileBrowser__clear_file_list(void* kodiBase, char*** file_list, unsigned int entries);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogKeyboard */
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__show_and_get_input_with_head(void* kodiBase, const char* text_in, char** text_out, const char* heading, bool allow_empty_result, bool hiddenInput, unsigned int auto_close_ms);
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__show_and_get_input(void* kodiBase, const char* text_in, char** text_out, bool allow_empty_result, unsigned int auto_close_ms);
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__show_and_get_new_password_with_head(void* kodiBase, const char* password_in, char** password_out, const char* heading, bool allow_empty_result, unsigned int auto_close_ms);
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__show_and_get_new_password(void* kodiBase, const char* password_in, char** password_out, unsigned int auto_close_ms);
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__show_and_verify_new_password_with_head(void* kodiBase, char** password_out, const char* heading, bool allow_empty_result, unsigned int auto_close_ms);
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__show_and_verify_new_password(void* kodiBase, char** password_out, unsigned int auto_close_ms);
extern int AddonToKodiFuncTable_kodi_gui_dialogKeyboard__show_and_verify_password(void* kodiBase, const char* password_in, char** password_out, const char* heading, int retries, unsigned int auto_close_ms);
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__show_and_get_filter(void* kodiBase, const char* text_in, char** text_out, bool searching, unsigned int auto_close_ms);
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__send_text_to_active_keyboard(void* kodiBase, const char* text, bool close_keyboard);
extern bool AddonToKodiFuncTable_kodi_gui_dialogKeyboard__is_keyboard_activated(void* kodiBase);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogNumeric */
extern bool AddonToKodiFuncTable_kodi_gui_dialogNumeric__show_and_verify_new_password(void* kodiBase, char** password);
extern int AddonToKodiFuncTable_kodi_gui_dialogNumeric__show_and_verify_password(void* kodiBase, const char* password, const char *heading, int retries);
extern bool AddonToKodiFuncTable_kodi_gui_dialogNumeric__show_and_verify_input(void* kodiBase, const char* verify_in, char** verify_out, const char* heading, bool verify_input);
extern bool AddonToKodiFuncTable_kodi_gui_dialogNumeric__show_and_get_time(void* kodiBase, tm *time, const char *heading);
extern bool AddonToKodiFuncTable_kodi_gui_dialogNumeric__show_and_get_date(void* kodiBase, tm *date, const char *heading);
extern bool AddonToKodiFuncTable_kodi_gui_dialogNumeric__show_and_get_ip_address(void* kodiBase, const char* ip_address_in, char** ip_address_out, const char *heading);
extern bool AddonToKodiFuncTable_kodi_gui_dialogNumeric__show_and_get_number(void* kodiBase, const char* input_in, char** input_out, const char *heading, unsigned int auto_close_ms);
extern bool AddonToKodiFuncTable_kodi_gui_dialogNumeric__show_and_get_seconds(void* kodiBase, const char* time_in, char** time_out, const char *heading);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogOK */
extern void AddonToKodiFuncTable_kodi_gui_dialogOK__show_and_get_input_single_text(void* kodiBase, const char *heading, const char *text);
extern void AddonToKodiFuncTable_kodi_gui_dialogOK__show_and_get_input_line_text(void* kodiBase, const char *heading, const char *line0, const char *line1, const char *line2);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogProgress */
extern void* AddonToKodiFuncTable_kodi_gui_dialogProgress__new_dialog(void* kodiBase);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__delete_dialog(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__open(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__set_heading(void* kodiBase, void* handle, const char* heading);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__set_line(void* kodiBase, void* handle, unsigned int lineNo, const char* line);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__set_can_cancel(void* kodiBase, void* handle, bool canCancel);
extern bool AddonToKodiFuncTable_kodi_gui_dialogProgress__is_canceled(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__set_percentage(void* kodiBase, void* handle, int percentage);
extern int AddonToKodiFuncTable_kodi_gui_dialogProgress__get_percentage(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__show_progress_bar(void* kodiBase, void* handle, bool pnOff);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__set_progress_max(void* kodiBase, void* handle, int max);
extern void AddonToKodiFuncTable_kodi_gui_dialogProgress__set_progress_advance(void* kodiBase, void* handle, int nSteps);
extern bool AddonToKodiFuncTable_kodi_gui_dialogProgress__abort(void* kodiBase, void* handle);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogSelect */
extern int AddonToKodiFuncTable_kodi_gui_dialogSelect__open(void* kodiBase, const char *heading, const char *entries[], unsigned int size, int selected, unsigned int autoclose);
extern bool AddonToKodiFuncTable_kodi_gui_dialogSelect__open_multi_select(void* kodiBase, const char* heading, const char* entryIDs[], const char* entryNames[], bool entriesSelected[], unsigned int size, unsigned int autoclose);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogTextViewer */
extern void AddonToKodiFuncTable_kodi_gui_dialogTextViewer__open(void* kodiBase, const char *heading, const char *text);

/* Interface: AddonToKodiFuncTable_kodi_gui_dialogYesNo */
extern bool AddonToKodiFuncTable_kodi_gui_dialogYesNo__show_and_get_input_single_text(void* kodiBase, const char *heading, const char *text, bool *canceled, const char *noLabel, const char *yesLabel);
extern bool AddonToKodiFuncTable_kodi_gui_dialogYesNo__show_and_get_input_line_text(void* kodiBase, const char *heading, const char *line0, const char *line1, const char *line2, const char *noLabel, const char *yesLabel);
extern bool AddonToKodiFuncTable_kodi_gui_dialogYesNo__show_and_get_input_line_button_text(void* kodiBase, const char *heading, const char *line0, const char *line1, const char *line2, bool *canceled, const char *noLabel, const char *yesLabel);

/* Interface: AddonToKodiFuncTable_kodi_gui_listItem */
extern void* AddonToKodiFuncTable_kodi_gui_listItem__create(void* kodiBase, const char* label, const char* label2, const char* icon_image, const char* path);
extern void AddonToKodiFuncTable_kodi_gui_listItem__destroy(void* kodiBase, void* handle);
extern char* AddonToKodiFuncTable_kodi_gui_listItem__get_label(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_listItem__set_label(void* kodiBase, void* handle, const char* label);
extern char* AddonToKodiFuncTable_kodi_gui_listItem__get_label2(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_listItem__set_label2(void* kodiBase, void* handle, const char* label);
extern char* AddonToKodiFuncTable_kodi_gui_listItem__get_icon_image(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_listItem__set_icon_image(void* kodiBase, void* handle, const char* image);
extern char* AddonToKodiFuncTable_kodi_gui_listItem__get_art(void* kodiBase, void* handle, const char* type);
extern void AddonToKodiFuncTable_kodi_gui_listItem__set_art(void* kodiBase, void* handle, const char* type, const char* image);
extern char* AddonToKodiFuncTable_kodi_gui_listItem__get_path(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_listItem__set_path(void* kodiBase, void* handle, const char* path);
extern char* AddonToKodiFuncTable_kodi_gui_listItem__get_property(void* kodiBase, void* handle, const char* key);
extern void AddonToKodiFuncTable_kodi_gui_listItem__set_property(void* kodiBase, void* handle, const char* key, const char* value);
extern void AddonToKodiFuncTable_kodi_gui_listItem__select(void* kodiBase, void* handle, bool select);
extern bool AddonToKodiFuncTable_kodi_gui_listItem__is_selected(void* kodiBase, void* handle);

/* Interface: AddonToKodiFuncTable_kodi_gui_window */
extern void* AddonToKodiFuncTable_kodi_gui_window__create(void* kodiBase, const char* xml_filename, const char* default_skin, bool as_dialog, bool is_media);
extern void AddonToKodiFuncTable_kodi_gui_window__destroy(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_window__set_callbacks(void* kodiBase, void* handle, void* clienthandle, bool (*show)(void* kodiBase, void* handle);
extern bool AddonToKodiFuncTable_kodi_gui_window__close(void* kodiBase, void* handle);
extern bool AddonToKodiFuncTable_kodi_gui_window__do_modal(void* kodiBase, void* handle);
extern bool AddonToKodiFuncTable_kodi_gui_window__set_focus_id(void* kodiBase, void* handle, int control_id);
extern int AddonToKodiFuncTable_kodi_gui_window__get_focus_id(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_window__set_control_label(void* kodiBase, void* handle, int control_id, const char* label);
extern void AddonToKodiFuncTable_kodi_gui_window__set_property(void* kodiBase, void* handle, const char* key, const char* value);
extern void AddonToKodiFuncTable_kodi_gui_window__set_property_int(void* kodiBase, void* handle, const char* key, int value);
extern void AddonToKodiFuncTable_kodi_gui_window__set_property_bool(void* kodiBase, void* handle, const char* key, bool value);
extern void AddonToKodiFuncTable_kodi_gui_window__set_property_double(void* kodiBase, void* handle, const char* key, double value);
extern char* AddonToKodiFuncTable_kodi_gui_window__get_property(void* kodiBase, void* handle, const char* key);
extern int AddonToKodiFuncTable_kodi_gui_window__get_property_int(void* kodiBase, void* handle, const char* key);
extern bool AddonToKodiFuncTable_kodi_gui_window__get_property_bool(void* kodiBase, void* handle, const char* key);
extern double AddonToKodiFuncTable_kodi_gui_window__get_property_double(void* kodiBase, void* handle, const char* key);
extern void AddonToKodiFuncTable_kodi_gui_window__clear_properties(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_window__clear_property(void* kodiBase, void* handle, const char* key);
extern void AddonToKodiFuncTable_kodi_gui_window__clear_item_list(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_window__add_list_item(void* kodiBase, void* handle, void* item, int list_position);
extern void AddonToKodiFuncTable_kodi_gui_window__remove_list_item_from_position(void* kodiBase, void* handle, int list_position);
extern void AddonToKodiFuncTable_kodi_gui_window__remove_list_item(void* kodiBase, void* handle, void* item);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_list_item(void* kodiBase, void* handle, int list_position);
extern void AddonToKodiFuncTable_kodi_gui_window__set_current_list_position(void* kodiBase, void* handle, int list_position);
extern int AddonToKodiFuncTable_kodi_gui_window__get_current_list_position(void* kodiBase, void* handle);
extern int AddonToKodiFuncTable_kodi_gui_window__get_list_size(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_window__set_container_property(void* kodiBase, void* handle, const char* key, const char* value);
extern void AddonToKodiFuncTable_kodi_gui_window__set_container_content(void* kodiBase, void* handle, const char* value);
extern int AddonToKodiFuncTable_kodi_gui_window__get_current_container_id(void* kodiBase, void* handle);
extern void AddonToKodiFuncTable_kodi_gui_window__mark_dirty_region(void* kodiBase, void* handle);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_button(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_edit(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_fade_label(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_image(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_label(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_progress(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_radio_button(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_render_addon(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_settings_slider(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_slider(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_spin(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_text_box(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy1(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy2(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy3(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy4(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy5(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy6(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy7(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy8(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy9(void* kodiBase, void* handle, int control_id);
extern void* AddonToKodiFuncTable_kodi_gui_window__get_control_dummy10(void* kodiBase, void* handle, int control_id);

/* Interface: AddonToKodiFuncTable_kodi_gui */
