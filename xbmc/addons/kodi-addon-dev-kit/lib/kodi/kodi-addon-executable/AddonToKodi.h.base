#pragma once
/*
 *      Copyright (C) 2017 Team KODI
 *      http://kodi.tv
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with KODI; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include "AddonBase.h"
#include "exe/definitions.h"

#include <stdbool.h>
#include <stdint.h>
#include <semaphore.h>
#include <string>
#ifdef BUILD_KODI_ADDON
#include <p8-platform/util/StringUtils.h>
#else
#include "utils/StringUtils.h"
#endif

/**
  * @brief Currently fixed size for global shared memory between Kodi and Add-on.
  */
#define DEFAULT_SHARED_MEM_SIZE 10*1024

typedef struct apiMessageIn
{
  uint32_t m_channel;
  uint32_t m_serialNumber;
  uint32_t m_opcode;
  uint32_t m_dataLength;
  uint8_t data[DEFAULT_SHARED_MEM_SIZE-(sizeof(uint32_t)*10)];
} apiMessageIn;

typedef struct apiMessageOut
{
  uint32_t m_channelId;
  uint32_t m_requestID;
  uint32_t m_dataLength;
  uint8_t data[DEFAULT_SHARED_MEM_SIZE-(sizeof(uint32_t)*10)];
} apiMessageOut;

typedef union msgType
{
  apiMessageIn in;
  apiMessageOut out;
} msgType;

typedef struct apiShareData
{
#if (defined TARGET_WINDOWS)
  HANDLE shmSegmentToAddon;
  HANDLE shmSegmentToKodi;
#elif (defined TARGET_POSIX)
  sem_t shmSegmentToAddon;
  sem_t shmSegmentToKodi;
#endif
  msgType message;
} apiShareData;

#define MAX_SEM_COUNT 10 // To use for windows CreateSemaphore(...)

