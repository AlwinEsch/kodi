/*
 *  Copyright (C) 2005-2022 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "../../../../../include/kodi/c-api/addon-instance/pvr/pvr_providers.h"
#include "../../../../../src/shared/api/addon-instance/pvr/pvr_defines.h"
#include "src/shared/SharedGroups.h"

#include <string.h>
#include <string>
#include <tuple>
#include <vector>

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

#ifndef MSGPACK_ADD_ENUM_PVR_PROVIDER_TYPE
#define MSGPACK_ADD_ENUM_PVR_PROVIDER_TYPE
MSGPACK_ADD_ENUM(PVR_PROVIDER_TYPE);
#endif

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct IFC_PVR_PROVIDER
{
  IFC_PVR_PROVIDER() = default;
  IFC_PVR_PROVIDER(const PVR_PROVIDER* c_data)
  {
    if (c_data == nullptr)
      return;

    iUniqueId = c_data->iUniqueId;
    memcpy(strName.data(), c_data->strName, PVR_ADDON_NAME_STRING_LENGTH);
    type = c_data->type;
    memcpy(strIconPath.data(), c_data->strIconPath, PVR_ADDON_URL_STRING_LENGTH);
    memcpy(strCountries.data(), c_data->strCountries, PVR_ADDON_COUNTRIES_STRING_LENGTH);
    memcpy(strLanguages.data(), c_data->strLanguages, PVR_ADDON_LANGUAGES_STRING_LENGTH);
  }

  void SetCStructure(PVR_PROVIDER* c_data)
  {
    if (c_data == nullptr)
      return;

    c_data->iUniqueId = iUniqueId;
    memcpy(c_data->strName, strName.data(), PVR_ADDON_NAME_STRING_LENGTH);
    c_data->type = type;
    memcpy(c_data->strIconPath, strIconPath.data(), PVR_ADDON_URL_STRING_LENGTH);
    memcpy(c_data->strCountries, strCountries.data(), PVR_ADDON_COUNTRIES_STRING_LENGTH);
    memcpy(c_data->strLanguages, strLanguages.data(), PVR_ADDON_LANGUAGES_STRING_LENGTH);
  }

  unsigned int iUniqueId;
  std::array<char, PVR_ADDON_NAME_STRING_LENGTH> strName;
  enum PVR_PROVIDER_TYPE type;
  std::array<char, PVR_ADDON_URL_STRING_LENGTH> strIconPath;
  std::array<char, PVR_ADDON_COUNTRIES_STRING_LENGTH> strCountries;
  std::array<char, PVR_ADDON_LANGUAGES_STRING_LENGTH> strLanguages;

  MSGPACK_DEFINE(iUniqueId, strName, type, strIconPath, strCountries, strLanguages);
};

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
