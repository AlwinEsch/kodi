/*
 *  Copyright (C) 2005-2022 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "../../../../include/kodi/c-api/addon-instance/web.h"
#include "src/shared/SharedGroups.h"
#include "src/shared/api/gui/input/action.h"

#include <string.h>
#include <string>
#include <tuple>
#include <vector>

/* API struct from 1 to 1 */
typedef struct KODI_ADDON_WEB_FUNC_V1_TO_V1
{
  PFN_KODI_ADDON_INSTANCE_CREATE_V1 create; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_INSTANCE_DESTROY_V1 destroy; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_START_INSTANCE_V1 start_instance; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_STOP_INSTANCE_V1 stop_instance; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_MAIN_INITIALIZE_V1 main_initialize; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_MAIN_LOOP_V1 main_loop; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_MAIN_SHUTDOWN_V1 main_shutdown; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_SET_MUTE_V1 set_mute; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_SET_LANGUAGE_V1 set_language; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CREATE_CONTROL_V1 create_control; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_DESTROY_CONTROL_V1 destroy_control; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_RENDER_INIT_V1 control_render_init; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_RENDER_DEINIT_V1
      control_render_deinit; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_RENDER_V1 control_render; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_DIRTY_V1 control_dirty; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_ON_INIT_V1 control_on_init; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_ON_ACTION_V1 control_on_action; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_ON_MOUSE_EVENT_V1
      control_on_mouse_event; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_OPEN_WEBSITE_V1 control_open_website; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_GET_HISTORY_V1 control_get_history; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_SEARCH_TEXT_V1 control_search_text; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_STOP_SEARCH_V1 control_stop_search; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_WEB_CMD_RELOAD_V1
      control_web_cmd_reload; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_WEB_CMD_STOP_LOAD_V1
      control_web_cmd_stop_load; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_WEB_CMD_NAV_BACK_V1
      control_web_cmd_nav_back; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_WEB_CMD_NAV_FORWARD_V1
      control_web_cmd_nav_forward; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_WEB_OPEN_OWN_CONTEXT_MENU_V1
      control_web_open_own_context_menu; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_WEB_CONTROL_SCREEN_SIZE_CHANGE_V1
      control_screen_size_change; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
} KODI_ADDON_WEB_FUNC_V1_TO_V1;

union KODI_ADDON_WEB_FUNC_UNION
{
  struct KODI_ADDON_WEB_FUNC_V1_TO_V1 v1;
};

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

#ifndef MSGPACK_ADD_ENUM_WEB_ADDON_ERROR
#define MSGPACK_ADD_ENUM_WEB_ADDON_ERROR
MSGPACK_ADD_ENUM(WEB_ADDON_ERROR);
#endif

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

// Code here relates to direct API calls without use of shared mem from addon to Kodi.
//{{{

typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_IS_MUTED_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_REQUEST_OPEN_SITE_IN_NEW_TAB_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, const char*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SET_CONTROL_READY_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, bool);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SET_FULLSCREEN_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, bool);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SET_ICON_URL_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, const char*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SET_LOADING_STATE_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, bool, bool, bool);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SET_OPENED_ADDRESS_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, const char*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SET_OPENED_TITLE_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, const char*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SET_STATUS_MESSAGE_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, const char*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SET_TOOLTIP_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, WEB_KODI_CONTROL, const char*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_INHIBIT_SCREENSAVER_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, bool);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_INHIBIT_SHUTDOWN_V1)(
    void*, KODI_ADDON_INSTANCE_BACKEND_HDL, bool);

struct directFuncToKodi_addoninstance_web_h
{
  void* thisClassHdl;
  PFN_INT_KODI_ADDON_WEB_CONTROL_REQUEST_OPEN_SITE_IN_NEW_TAB_V1
      kodi_addon_web_control_request_open_site_in_new_tab_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SET_CONTROL_READY_V1 kodi_addon_web_control_set_control_ready_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SET_FULLSCREEN_V1 kodi_addon_web_control_set_fullscreen_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SET_ICON_URL_V1 kodi_addon_web_control_set_icon_url_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SET_LOADING_STATE_V1 kodi_addon_web_control_set_loading_state_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SET_OPENED_ADDRESS_V1 kodi_addon_web_control_set_opened_address_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SET_OPENED_TITLE_V1 kodi_addon_web_control_set_opened_title_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SET_STATUS_MESSAGE_V1 kodi_addon_web_control_set_status_message_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SET_TOOLTIP_V1 kodi_addon_web_control_set_tooltip_v1;
  PFN_INT_KODI_ADDON_WEB_INHIBIT_SCREENSAVER_V1 kodi_addon_web_inhibit_screensaver_v1;
  PFN_INT_KODI_ADDON_WEB_INHIBIT_SHUTDOWN_V1 kodi_addon_web_inhibit_shutdown_v1;
  PFN_INT_KODI_ADDON_WEB_IS_MUTED_V1 kodi_addon_web_is_muted_v1;
};

//}}}

// Code here relates to direct API calls without use of shared mem from Kodi to addon.
//{{{

typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_DIRTY_V1)(void*,
                                                                         const KODI_ADDON_WEB_HDL,
                                                                         const WEB_KODI_CONTROL);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_GET_HISTORY_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL, char***, size_t*, bool);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_ON_ACTION_V1)(
    void*,
    const KODI_ADDON_WEB_HDL,
    const WEB_KODI_CONTROL,
    const struct KODI_ADDON_ACTION_DATA*,
    int*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_ON_INIT_V1)(void*,
                                                                           const KODI_ADDON_WEB_HDL,
                                                                           const WEB_KODI_CONTROL);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_ON_MOUSE_EVENT_V1)(
    void*,
    const KODI_ADDON_WEB_HDL,
    const WEB_KODI_CONTROL,
    int,
    double,
    double,
    double,
    double,
    int);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_OPEN_WEBSITE_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL, const char*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_RENDER_INIT_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_MAIN_INITIALIZE_V1)(
    void*, const KODI_ADDON_WEB_HDL);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_SET_LANGUAGE_V1)(void*,
                                                                        const KODI_ADDON_WEB_HDL,
                                                                        const char*);
typedef enum WEB_ADDON_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CREATE_CONTROL_V1)(
    void*,
    const KODI_ADDON_WEB_HDL,
    const struct WEB_ADDON_GUI_PROPS*,
    const char*,
    WEB_KODI_CONTROL*);
typedef enum WEB_ADDON_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_DESTROY_CONTROL_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL, bool);
typedef enum WEB_ADDON_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_START_INSTANCE_V1)(
    void*, const KODI_ADDON_WEB_HDL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_RENDER_DEINIT_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_RENDER_V1)(void*,
                                                                          const KODI_ADDON_WEB_HDL,
                                                                          const WEB_KODI_CONTROL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SCREEN_SIZE_CHANGE_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL, float, float, float, float, bool);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_SEARCH_TEXT_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL, const char*, bool, bool, bool);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_STOP_SEARCH_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL, bool);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_CMD_NAV_BACK_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_CMD_NAV_FORWARD_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_CMD_RELOAD_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_CMD_STOP_LOAD_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_OPEN_OWN_CONTEXT_MENU_V1)(
    void*, const KODI_ADDON_WEB_HDL, const WEB_KODI_CONTROL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_MAIN_LOOP_V1)(void*,
                                                                     const KODI_ADDON_WEB_HDL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_MAIN_SHUTDOWN_V1)(void*,
                                                                         const KODI_ADDON_WEB_HDL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_SET_MUTE_V1)(void*,
                                                                    const KODI_ADDON_WEB_HDL,
                                                                    bool);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_WEB_STOP_INSTANCE_V1)(void*,
                                                                         const KODI_ADDON_WEB_HDL);

struct directFuncToAddon_addoninstance_web_h
{
  void* thisClassHdl;
  PFN_INT_KODI_ADDON_WEB_CONTROL_DIRTY_V1 kodi_addon_web_control_dirty_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_GET_HISTORY_V1 kodi_addon_web_control_get_history_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_ON_ACTION_V1 kodi_addon_web_control_on_action_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_ON_INIT_V1 kodi_addon_web_control_on_init_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_ON_MOUSE_EVENT_V1 kodi_addon_web_control_on_mouse_event_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_OPEN_WEBSITE_V1 kodi_addon_web_control_open_website_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_RENDER_DEINIT_V1 kodi_addon_web_control_render_deinit_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_RENDER_INIT_V1 kodi_addon_web_control_render_init_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_RENDER_V1 kodi_addon_web_control_render_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SCREEN_SIZE_CHANGE_V1 kodi_addon_web_control_screen_size_change_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_SEARCH_TEXT_V1 kodi_addon_web_control_search_text_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_STOP_SEARCH_V1 kodi_addon_web_control_stop_search_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_CMD_NAV_BACK_V1 kodi_addon_web_control_web_cmd_nav_back_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_CMD_NAV_FORWARD_V1
      kodi_addon_web_control_web_cmd_nav_forward_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_CMD_RELOAD_V1 kodi_addon_web_control_web_cmd_reload_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_CMD_STOP_LOAD_V1 kodi_addon_web_control_web_cmd_stop_load_v1;
  PFN_INT_KODI_ADDON_WEB_CONTROL_WEB_OPEN_OWN_CONTEXT_MENU_V1
      kodi_addon_web_control_web_open_own_context_menu_v1;
  PFN_INT_KODI_ADDON_WEB_CREATE_CONTROL_V1 kodi_addon_web_create_control_v1;
  PFN_INT_KODI_ADDON_WEB_DESTROY_CONTROL_V1 kodi_addon_web_destroy_control_v1;
  PFN_INT_KODI_ADDON_WEB_MAIN_INITIALIZE_V1 kodi_addon_web_main_initialize_v1;
  PFN_INT_KODI_ADDON_WEB_MAIN_LOOP_V1 kodi_addon_web_main_loop_v1;
  PFN_INT_KODI_ADDON_WEB_MAIN_SHUTDOWN_V1 kodi_addon_web_main_shutdown_v1;
  PFN_INT_KODI_ADDON_WEB_SET_LANGUAGE_V1 kodi_addon_web_set_language_v1;
  PFN_INT_KODI_ADDON_WEB_SET_MUTE_V1 kodi_addon_web_set_mute_v1;
  PFN_INT_KODI_ADDON_WEB_START_INSTANCE_V1 kodi_addon_web_start_instance_v1;
  PFN_INT_KODI_ADDON_WEB_STOP_INSTANCE_V1 kodi_addon_web_stop_instance_v1;
};

//}}}

/* Confirm after autogen the correctness here! */
/*---AUTO_GEN_PARSE<DATA_STRUCTURES>---*/

struct IFC_WEB_ADDON_GUI_PROPS
{
  IFC_WEB_ADDON_GUI_PROPS() = default;
  IFC_WEB_ADDON_GUI_PROPS(const WEB_ADDON_GUI_PROPS* c_data)
  {
    if (c_data == nullptr)
      return;

    memcpy(strName.data(), c_data->strName, WEB_MAX_NAME_STRING_SIZE);
    pDevice = PtrValue(c_data->pDevice);
    fXPos = c_data->fXPos;
    fYPos = c_data->fYPos;
    fWidth = c_data->fWidth;
    fHeight = c_data->fHeight;
    fPixelRatio = c_data->fPixelRatio;
    fFPS = c_data->fFPS;
    fSkinXPos = c_data->fSkinXPos;
    fSkinYPos = c_data->fSkinYPos;
    fSkinWidth = c_data->fSkinWidth;
    fSkinHeight = c_data->fSkinHeight;
    bUseTransparentBackground = c_data->bUseTransparentBackground;
    iBackgroundColorARGB = c_data->iBackgroundColorARGB;
    iGUIItemLeft = c_data->iGUIItemLeft;
    iGUIItemRight = c_data->iGUIItemRight;
    iGUIItemTop = c_data->iGUIItemTop;
    iGUIItemBottom = c_data->iGUIItemBottom;
    iGUIItemBack = c_data->iGUIItemBack;
    pControlIdent = PtrValue(c_data->pControlIdent);
  }

  void SetCStructure(WEB_ADDON_GUI_PROPS* c_data)
  {
    if (c_data == nullptr)
      return;

    memcpy(c_data->strName, strName.data(), WEB_MAX_NAME_STRING_SIZE);
    c_data->pDevice = reinterpret_cast<ADDON_HARDWARE_CONTEXT>(pDevice);
    c_data->fXPos = fXPos;
    c_data->fYPos = fYPos;
    c_data->fWidth = fWidth;
    c_data->fHeight = fHeight;
    c_data->fPixelRatio = fPixelRatio;
    c_data->fFPS = fFPS;
    c_data->fSkinXPos = fSkinXPos;
    c_data->fSkinYPos = fSkinYPos;
    c_data->fSkinWidth = fSkinWidth;
    c_data->fSkinHeight = fSkinHeight;
    c_data->bUseTransparentBackground = bUseTransparentBackground;
    c_data->iBackgroundColorARGB = iBackgroundColorARGB;
    c_data->iGUIItemLeft = iGUIItemLeft;
    c_data->iGUIItemRight = iGUIItemRight;
    c_data->iGUIItemTop = iGUIItemTop;
    c_data->iGUIItemBottom = iGUIItemBottom;
    c_data->iGUIItemBack = iGUIItemBack;
    c_data->pControlIdent = reinterpret_cast<WEB_KODI_CONTROL>(pControlIdent);
  }

  std::array<char, WEB_MAX_NAME_STRING_SIZE> strName;
  PtrValue pDevice;
  float fXPos;
  float fYPos;
  float fWidth;
  float fHeight;
  float fPixelRatio;
  float fFPS;
  float fSkinXPos;
  float fSkinYPos;
  float fSkinWidth;
  float fSkinHeight;
  bool bUseTransparentBackground;
  uint32_t iBackgroundColorARGB;
  int iGUIItemLeft;
  int iGUIItemRight;
  int iGUIItemTop;
  int iGUIItemBottom;
  int iGUIItemBack;
  PtrValue pControlIdent;

  MSGPACK_DEFINE(strName,
                 pDevice,
                 fXPos,
                 fYPos,
                 fWidth,
                 fHeight,
                 fPixelRatio,
                 fFPS,
                 fSkinXPos,
                 fSkinYPos,
                 fSkinWidth,
                 fSkinHeight,
                 bUseTransparentBackground,
                 iBackgroundColorARGB,
                 iGUIItemLeft,
                 iGUIItemRight,
                 iGUIItemTop,
                 iGUIItemBottom,
                 iGUIItemBack,
                 pControlIdent);
};
/*---AUTO_GEN_PARSE<DATA_STRUCTURES_END>---*/

typedef enum funcParent_addoninstance_web_h : int
{
  funcParent_kodi_addon_web_inhibit_shutdown_v1,
  funcParent_kodi_addon_web_inhibit_screensaver_v1,
  funcParent_kodi_addon_web_is_muted_v1,
  funcParent_kodi_addon_web_control_set_control_ready_v1,
  funcParent_kodi_addon_web_control_set_opened_address_v1,
  funcParent_kodi_addon_web_control_set_opened_title_v1,
  funcParent_kodi_addon_web_control_set_icon_url_v1,
  funcParent_kodi_addon_web_control_set_fullscreen_v1,
  funcParent_kodi_addon_web_control_set_loading_state_v1,
  funcParent_kodi_addon_web_control_set_tooltip_v1,
  funcParent_kodi_addon_web_control_set_status_message_v1,
  funcParent_kodi_addon_web_control_request_open_site_in_new_tab_v1,
} funcParent_addoninstance_web_h;

// clang-format off
/*---AUTO_GEN_PARSE<FUNC_PARENT_TUPLES>---*/
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_inhibit_shutdown(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, bool inhibit); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, bool> msgParent__IN_kodi_addon_web_inhibit_shutdown_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_inhibit_shutdown_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_inhibit_screensaver(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, bool inhibit); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, bool> msgParent__IN_kodi_addon_web_inhibit_screensaver_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_inhibit_screensaver_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT bool kodi_addon_web_is_muted(KODI_ADDON_INSTANCE_BACKEND_HDL hdl); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue> msgParent__IN_kodi_addon_web_is_muted_v1; /* Autogenerated */
typedef std::tuple<bool> msgParent_OUT_kodi_addon_web_is_muted_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_set_control_ready(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, bool ready); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, bool> msgParent__IN_kodi_addon_web_control_set_control_ready_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_set_control_ready_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_set_opened_address(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, const char* title); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, std::string> msgParent__IN_kodi_addon_web_control_set_opened_address_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_set_opened_address_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_set_opened_title(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, const char* title); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, std::string> msgParent__IN_kodi_addon_web_control_set_opened_title_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_set_opened_title_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_set_icon_url(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, const char* icon); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, std::string> msgParent__IN_kodi_addon_web_control_set_icon_url_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_set_icon_url_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_set_fullscreen(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, bool fullscreen); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, bool> msgParent__IN_kodi_addon_web_control_set_fullscreen_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_set_fullscreen_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_set_loading_state(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, bool isLoading, bool canGoBack, bool canGoForward); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, bool, bool, bool> msgParent__IN_kodi_addon_web_control_set_loading_state_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_set_loading_state_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_set_tooltip(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, const char* tooltip); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, std::string> msgParent__IN_kodi_addon_web_control_set_tooltip_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_set_tooltip_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_set_status_message(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, const char* status); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, std::string> msgParent__IN_kodi_addon_web_control_set_status_message_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_set_status_message_v1; /* Autogenerated */
// Original API call: ATTR_DLL_EXPORT void kodi_addon_web_control_request_open_site_in_new_tab(KODI_ADDON_INSTANCE_BACKEND_HDL hdl, WEB_KODI_CONTROL handle, const char* url); __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue, PtrValue, std::string> msgParent__IN_kodi_addon_web_control_request_open_site_in_new_tab_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgParent_OUT_kodi_addon_web_control_request_open_site_in_new_tab_v1; /* Autogenerated */
/*---AUTO_GEN_PARSE<FUNC_PARENT_TUPLES_END>---*/
// clang-format on

//==============================================================================

typedef enum funcChild_addoninstance_web_h : int
{
  funcChild_kodi_addon_web_start_instance_v1,
  funcChild_kodi_addon_web_stop_instance_v1,
  funcChild_kodi_addon_web_main_initialize_v1,
  funcChild_kodi_addon_web_main_loop_v1,
  funcChild_kodi_addon_web_main_shutdown_v1,
  funcChild_kodi_addon_web_set_mute_v1,
  funcChild_kodi_addon_web_set_language_v1,
  funcChild_kodi_addon_web_create_control_v1,
  funcChild_kodi_addon_web_destroy_control_v1,
  funcChild_kodi_addon_web_control_render_init_v1,
  funcChild_kodi_addon_web_control_render_deinit_v1,
  funcChild_kodi_addon_web_control_render_v1,
  funcChild_kodi_addon_web_control_dirty_v1,
  funcChild_kodi_addon_web_control_on_init_v1,
  funcChild_kodi_addon_web_control_on_action_v1,
  funcChild_kodi_addon_web_control_on_mouse_event_v1,
  funcChild_kodi_addon_web_control_open_website_v1,
  funcChild_kodi_addon_web_control_get_history_v1,
  funcChild_kodi_addon_web_control_search_text_v1,
  funcChild_kodi_addon_web_control_stop_search_v1,
  funcChild_kodi_addon_web_control_web_cmd_reload_v1,
  funcChild_kodi_addon_web_control_web_cmd_stop_load_v1,
  funcChild_kodi_addon_web_control_web_cmd_nav_back_v1,
  funcChild_kodi_addon_web_control_web_cmd_nav_forward_v1,
  funcChild_kodi_addon_web_control_web_open_own_context_menu_v1,
  funcChild_kodi_addon_web_control_screen_size_change_v1,
} funcChild_addoninstance_web_h;

// clang-format off
/*---AUTO_GEN_PARSE<FUNC_CHILD_TUPLES>---*/
// Original API call: typedef enum WEB_ADDON_ERROR(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_START_INSTANCE_V1)(const KODI_ADDON_WEB_HDL hdl);
typedef std::tuple<PtrValue> msgChild__IN_kodi_addon_web_start_instance_v1; /* Autogenerated */
typedef std::tuple<WEB_ADDON_ERROR> msgChild_OUT_kodi_addon_web_start_instance_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_STOP_INSTANCE_V1)(const KODI_ADDON_WEB_HDL hdl);
typedef std::tuple<PtrValue> msgChild__IN_kodi_addon_web_stop_instance_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_stop_instance_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_MAIN_INITIALIZE_V1)(const KODI_ADDON_WEB_HDL hdl);
typedef std::tuple<PtrValue> msgChild__IN_kodi_addon_web_main_initialize_v1; /* Autogenerated */
typedef std::tuple<bool> msgChild_OUT_kodi_addon_web_main_initialize_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_MAIN_LOOP_V1)(const KODI_ADDON_WEB_HDL hdl);
typedef std::tuple<PtrValue> msgChild__IN_kodi_addon_web_main_loop_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_main_loop_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_MAIN_SHUTDOWN_V1)(const KODI_ADDON_WEB_HDL hdl);
typedef std::tuple<PtrValue> msgChild__IN_kodi_addon_web_main_shutdown_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_main_shutdown_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_SET_MUTE_V1)(const KODI_ADDON_WEB_HDL hdl, bool mute);
typedef std::tuple<PtrValue, bool> msgChild__IN_kodi_addon_web_set_mute_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_set_mute_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_SET_LANGUAGE_V1)(const KODI_ADDON_WEB_HDL hdl, const char* language);
typedef std::tuple<PtrValue, std::string> msgChild__IN_kodi_addon_web_set_language_v1; /* Autogenerated */
typedef std::tuple<bool> msgChild_OUT_kodi_addon_web_set_language_v1; /* Autogenerated */
// Original API call: typedef enum WEB_ADDON_ERROR(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CREATE_CONTROL_V1)(const KODI_ADDON_WEB_HDL hdl, const struct WEB_ADDON_GUI_PROPS* props, const char* start_url, WEB_KODI_CONTROL* handle);
typedef std::tuple<PtrValue, IFC_WEB_ADDON_GUI_PROPS, std::string> msgChild__IN_kodi_addon_web_create_control_v1; /* Autogenerated */
typedef std::tuple<WEB_ADDON_ERROR, PtrValue> msgChild_OUT_kodi_addon_web_create_control_v1; /* Autogenerated */
// Original API call: typedef enum WEB_ADDON_ERROR(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_DESTROY_CONTROL_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle, bool complete);
typedef std::tuple<PtrValue, PtrValue, bool> msgChild__IN_kodi_addon_web_destroy_control_v1; /* Autogenerated */
typedef std::tuple<WEB_ADDON_ERROR> msgChild_OUT_kodi_addon_web_destroy_control_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_RENDER_INIT_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrKodiOffscreen, uint64_t, int, int, int, int, PtrValue /* < Offscreen render */, PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_render_init_v1; /* Autogenerated */
typedef std::tuple<bool, PtrAddonOffscreen, bool /* < Offscreen render */> msgChild_OUT_kodi_addon_web_control_render_init_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_RENDER_DEINIT_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrAddonOffscreen /* < Offscreen render */, PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_render_deinit_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_render_deinit_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_RENDER_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrAddonOffscreen /* < Offscreen render */, PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_render_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_render_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_DIRTY_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_dirty_v1; /* Autogenerated */
typedef std::tuple<bool> msgChild_OUT_kodi_addon_web_control_dirty_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_ON_INIT_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_on_init_v1; /* Autogenerated */
typedef std::tuple<bool> msgChild_OUT_kodi_addon_web_control_on_init_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_ON_ACTION_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle, const struct KODI_ADDON_ACTION_DATA* action, int* nextItem);
typedef std::tuple<PtrValue, PtrValue, IFC_KODI_ADDON_ACTION_DATA, int> msgChild__IN_kodi_addon_web_control_on_action_v1; /* Autogenerated */
typedef std::tuple<bool, int> msgChild_OUT_kodi_addon_web_control_on_action_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_ON_MOUSE_EVENT_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle, int id, double x, double y, double offsetX, double offsetY, int state);
typedef std::tuple<PtrValue, PtrValue, int, double, double, double, double, int> msgChild__IN_kodi_addon_web_control_on_mouse_event_v1; /* Autogenerated */
typedef std::tuple<bool> msgChild_OUT_kodi_addon_web_control_on_mouse_event_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_OPEN_WEBSITE_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle, const char* url);
typedef std::tuple<PtrValue, PtrValue, std::string> msgChild__IN_kodi_addon_web_control_open_website_v1; /* Autogenerated */
typedef std::tuple<bool> msgChild_OUT_kodi_addon_web_control_open_website_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_GET_HISTORY_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle, char*** list, size_t* entries, bool behind_current);
typedef std::tuple<PtrValue, PtrValue, size_t, bool> msgChild__IN_kodi_addon_web_control_get_history_v1; /* Autogenerated */
typedef std::tuple<bool, std::vector<std::string>, size_t> msgChild_OUT_kodi_addon_web_control_get_history_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_SEARCH_TEXT_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle, const char* text, bool forward, bool matchCase, bool findNext);
typedef std::tuple<PtrValue, PtrValue, std::string, bool, bool, bool> msgChild__IN_kodi_addon_web_control_search_text_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_search_text_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_STOP_SEARCH_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle, bool clearSelection);
typedef std::tuple<PtrValue, PtrValue, bool> msgChild__IN_kodi_addon_web_control_stop_search_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_stop_search_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_WEB_CMD_RELOAD_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_web_cmd_reload_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_web_cmd_reload_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_WEB_CMD_STOP_LOAD_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_web_cmd_stop_load_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_web_cmd_stop_load_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_WEB_CMD_NAV_BACK_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_web_cmd_nav_back_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_web_cmd_nav_back_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_WEB_CMD_NAV_FORWARD_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_web_cmd_nav_forward_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_web_cmd_nav_forward_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_WEB_OPEN_OWN_CONTEXT_MENU_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle);
typedef std::tuple<PtrValue, PtrValue> msgChild__IN_kodi_addon_web_control_web_open_own_context_menu_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_web_open_own_context_menu_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_WEB_CONTROL_SCREEN_SIZE_CHANGE_V1)(const KODI_ADDON_WEB_HDL hdl, const WEB_KODI_CONTROL handle, float x, float y, float width, float height, bool fullscreen);
typedef std::tuple<PtrValue, PtrValue, float, float, float, float, bool> msgChild__IN_kodi_addon_web_control_screen_size_change_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_web_control_screen_size_change_v1; /* Autogenerated */
/*---AUTO_GEN_PARSE<FUNC_CHILD_TUPLES_END>---*/
// clang-format on

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
